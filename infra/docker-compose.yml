services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${ES_PORT}:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - fastats-network

  logstash:
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
    ports:
      - 9600:9600  # Logstash monitoring port
    volumes:
      - ./mysql-connector-j-8.0.33.jar:/usr/share/logstash/mysql-connector-j-8.0.33.jar
    networks:
      - fastats-network
    depends_on:
      - elasticsearch
      - mysql

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}                  
      --maxmemory 2GB                                  
      --maxmemory-policy allkeys-lru                   
      --appendonly no --save "900 1" --save "300 10" --save "60 10000"                                
      --appendfilename appendonly.aof                  
      --dir /data     
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastats-network

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      # - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # SQL 파일 마운트
    networks:
      - fastats-network

networks:
  fastats-network:
    driver: bridge

volumes:
  es_data:
    driver: local
  redis_data:
    driver: local
  mysql_data:
    driver: local
